// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver')
const assert = require('assert')

describe('004_newProjectAndDeleteProject', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('firefox').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit()
  })
  it('004_newProjectAndDeleteProject', async function() {
    await driver.get('http://localhost:3000/')
    await driver.findElement(By.linkText('Sign In')).click()
    await driver.findElement(By.id('username')).sendKeys('Test')
    await driver.findElement(By.id('password')).sendKeys('test')
    await driver.findElement(By.id('password')).sendKeys(Key.ENTER)
    await driver.findElement(By.linkText('New Project')).click()
    await driver.findElement(By.id('projectName')).click()
    await driver.findElement(By.id('projectName')).sendKeys('Test1')
    await driver.findElement(By.id('projectDescription')).click()
    await driver
      .findElement(By.id('projectDescription'))
      .sendKeys('Ceci est le test1')
    await driver.findElement(By.id('userGitHub')).click()
    await driver.findElement(By.id('userGitHub')).sendKeys('gitTest')
    await driver.findElement(By.id('repositoryGitHub')).click()
    await driver.findElement(By.id('repositoryGitHub')).sendKeys('repoTest')
    await driver.findElement(By.id('usernameMemberToAdd')).click()
    await driver.findElement(By.id('usernameMemberToAdd')).sendKeys('User5')
    await driver.findElement(By.css('.btn-primary')).click()
    await driver.findElement(By.id('usernameMemberToAdd')).click()
    await driver.findElement(By.id('usernameMemberToAdd')).sendKeys('user1')
    await driver.findElement(By.css('.btn-primary')).click()
    await driver.findElement(By.css('li > .btn-outline-danger')).click()
    await driver.findElement(By.id('selenium-ide-indicator')).click()
    await driver.findElement(By.id('createNewProject')).click()
    await driver.findElement(By.linkText('Manage Projects')).click()
    await driver.findElement(By.linkText('New Project')).click()
    await driver.findElement(By.id('projectName')).click()
    await driver.findElement(By.id('projectName')).sendKeys('Test2')
    await driver.findElement(By.id('projectDescription')).click()
    await driver.findElement(By.id('projectDescription')).sendKeys('No github')
    await driver.findElement(By.id('usernameMemberToAdd')).click()
    await driver.findElement(By.id('usernameMemberToAdd')).sendKeys('User5')
    await driver.findElement(By.css('.btn-primary')).click()
    await driver.findElement(By.id('usernameMemberToAdd')).click()
    await driver.findElement(By.id('usernameMemberToAdd')).sendKeys('user1')
    await driver.findElement(By.css('.btn-primary')).click()
    await driver.findElement(By.id('createNewProject')).click()
    await driver.findElement(By.linkText('Manage Projects')).click()
    await driver.findElement(By.linkText('New Project')).click()
    await driver.findElement(By.css('.list-group-item:nth-child(1)')).click()
    await driver.findElement(By.id('projectName')).click()
    await driver.findElement(By.id('projectName')).sendKeys('Test3')
    await driver.findElement(By.id('projectDescription')).click()
    await driver
      .findElement(By.id('projectDescription'))
      .sendKeys('No member and no github')
    await driver.findElement(By.id('createNewProject')).click()
    await driver.findElement(By.linkText('Manage Projects')).click()
    await driver.findElement(By.css('li:nth-child(3) form > .btn')).click()
    assert(
      (await driver
        .switchTo()
        .alert()
        .getText()) == 'Voulez-vous vraiment supprimer ce projet ?'
    )
    await driver
      .switchTo()
      .alert()
      .accept()
    await driver.findElement(By.css('.btn-outline-danger')).click()
  })
})
